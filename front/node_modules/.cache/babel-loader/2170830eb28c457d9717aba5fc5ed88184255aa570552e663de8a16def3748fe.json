{"ast":null,"code":"/** @typedef {\"info\" | \"warning\" | \"error\"} LogLevel */\n\n/** @type {LogLevel} */\nvar logLevel = \"info\";\nfunction dummy() {}\n\n/**\r\n * @param {LogLevel} level log level\r\n * @returns {boolean} true, if should log\r\n */\nfunction shouldLog(level) {\n  var shouldLog = logLevel === \"info\" && level === \"info\" || [\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\" || [\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\";\n  return shouldLog;\n}\n\n/**\r\n * @param {(msg?: string) => void} logFn log function\r\n * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient\r\n */\nfunction logGroup(logFn) {\n  return function (level, msg) {\n    if (shouldLog(level)) {\n      logFn(msg);\n    }\n  };\n}\n\n/**\r\n * @param {LogLevel} level log level\r\n * @param {string|Error} msg message\r\n */\nmodule.exports = function (level, msg) {\n  if (shouldLog(level)) {\n    if (level === \"info\") {\n      console.log(msg);\n    } else if (level === \"warning\") {\n      console.warn(msg);\n    } else if (level === \"error\") {\n      console.error(msg);\n    }\n  }\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\nmodule.exports.groupEnd = logGroup(groupEnd);\n\n/**\r\n * @param {LogLevel} level log level\r\n */\nmodule.exports.setLogLevel = function (level) {\n  logLevel = level;\n};\n\n/**\r\n * @param {Error} err error\r\n * @returns {string} formatted error\r\n */\nmodule.exports.formatError = function (err) {\n  var message = err.message;\n  var stack = err.stack;\n  if (!stack) {\n    return message;\n  } else if (stack.indexOf(message) < 0) {\n    return message + \"\\n\" + stack;\n  } else {\n    return stack;\n  }\n};","map":{"version":3,"names":["logLevel","dummy","shouldLog","level","indexOf","logGroup","logFn","msg","module","exports","console","log","warn","error","group","groupCollapsed","groupEnd","setLogLevel","formatError","err","message","stack"],"sources":["C:/Users/leesuhyeon/Desktop/2024 1학기 과제/캡디/coding/front/node_modules/webpack/hot/log.js"],"sourcesContent":["/** @typedef {\"info\" | \"warning\" | \"error\"} LogLevel */\r\n\r\n/** @type {LogLevel} */\r\nvar logLevel = \"info\";\r\n\r\nfunction dummy() {}\r\n\r\n/**\r\n * @param {LogLevel} level log level\r\n * @returns {boolean} true, if should log\r\n */\r\nfunction shouldLog(level) {\r\n\tvar shouldLog =\r\n\t\t(logLevel === \"info\" && level === \"info\") ||\r\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\r\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\r\n\treturn shouldLog;\r\n}\r\n\r\n/**\r\n * @param {(msg?: string) => void} logFn log function\r\n * @returns {(level: LogLevel, msg?: string) => void} function that logs when log level is sufficient\r\n */\r\nfunction logGroup(logFn) {\r\n\treturn function (level, msg) {\r\n\t\tif (shouldLog(level)) {\r\n\t\t\tlogFn(msg);\r\n\t\t}\r\n\t};\r\n}\r\n\r\n/**\r\n * @param {LogLevel} level log level\r\n * @param {string|Error} msg message\r\n */\r\nmodule.exports = function (level, msg) {\r\n\tif (shouldLog(level)) {\r\n\t\tif (level === \"info\") {\r\n\t\t\tconsole.log(msg);\r\n\t\t} else if (level === \"warning\") {\r\n\t\t\tconsole.warn(msg);\r\n\t\t} else if (level === \"error\") {\r\n\t\t\tconsole.error(msg);\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/* eslint-disable node/no-unsupported-features/node-builtins */\r\nvar group = console.group || dummy;\r\nvar groupCollapsed = console.groupCollapsed || dummy;\r\nvar groupEnd = console.groupEnd || dummy;\r\n/* eslint-enable node/no-unsupported-features/node-builtins */\r\n\r\nmodule.exports.group = logGroup(group);\r\n\r\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\r\n\r\nmodule.exports.groupEnd = logGroup(groupEnd);\r\n\r\n/**\r\n * @param {LogLevel} level log level\r\n */\r\nmodule.exports.setLogLevel = function (level) {\r\n\tlogLevel = level;\r\n};\r\n\r\n/**\r\n * @param {Error} err error\r\n * @returns {string} formatted error\r\n */\r\nmodule.exports.formatError = function (err) {\r\n\tvar message = err.message;\r\n\tvar stack = err.stack;\r\n\tif (!stack) {\r\n\t\treturn message;\r\n\t} else if (stack.indexOf(message) < 0) {\r\n\t\treturn message + \"\\n\" + stack;\r\n\t} else {\r\n\t\treturn stack;\r\n\t}\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,IAAIA,QAAQ,GAAG,MAAM;AAErB,SAASC,KAAKA,CAAA,EAAG,CAAC;;AAElB;AACA;AACA;AACA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EACzB,IAAID,SAAS,GACXF,QAAQ,KAAK,MAAM,IAAIG,KAAK,KAAK,MAAM,IACvC,CAAC,MAAM,EAAE,SAAS,CAAC,CAACC,OAAO,CAACJ,QAAQ,CAAC,IAAI,CAAC,IAAIG,KAAK,KAAK,SAAU,IAClE,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAACC,OAAO,CAACJ,QAAQ,CAAC,IAAI,CAAC,IAAIG,KAAK,KAAK,OAAQ;EAC3E,OAAOD,SAAS;AACjB;;AAEA;AACA;AACA;AACA;AACA,SAASG,QAAQA,CAACC,KAAK,EAAE;EACxB,OAAO,UAAUH,KAAK,EAAEI,GAAG,EAAE;IAC5B,IAAIL,SAAS,CAACC,KAAK,CAAC,EAAE;MACrBG,KAAK,CAACC,GAAG,CAAC;IACX;EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,UAAUN,KAAK,EAAEI,GAAG,EAAE;EACtC,IAAIL,SAAS,CAACC,KAAK,CAAC,EAAE;IACrB,IAAIA,KAAK,KAAK,MAAM,EAAE;MACrBO,OAAO,CAACC,GAAG,CAACJ,GAAG,CAAC;IACjB,CAAC,MAAM,IAAIJ,KAAK,KAAK,SAAS,EAAE;MAC/BO,OAAO,CAACE,IAAI,CAACL,GAAG,CAAC;IAClB,CAAC,MAAM,IAAIJ,KAAK,KAAK,OAAO,EAAE;MAC7BO,OAAO,CAACG,KAAK,CAACN,GAAG,CAAC;IACnB;EACD;AACD,CAAC;;AAED;AACA,IAAIO,KAAK,GAAGJ,OAAO,CAACI,KAAK,IAAIb,KAAK;AAClC,IAAIc,cAAc,GAAGL,OAAO,CAACK,cAAc,IAAId,KAAK;AACpD,IAAIe,QAAQ,GAAGN,OAAO,CAACM,QAAQ,IAAIf,KAAK;AACxC;;AAEAO,MAAM,CAACC,OAAO,CAACK,KAAK,GAAGT,QAAQ,CAACS,KAAK,CAAC;AAEtCN,MAAM,CAACC,OAAO,CAACM,cAAc,GAAGV,QAAQ,CAACU,cAAc,CAAC;AAExDP,MAAM,CAACC,OAAO,CAACO,QAAQ,GAAGX,QAAQ,CAACW,QAAQ,CAAC;;AAE5C;AACA;AACA;AACAR,MAAM,CAACC,OAAO,CAACQ,WAAW,GAAG,UAAUd,KAAK,EAAE;EAC7CH,QAAQ,GAAGG,KAAK;AACjB,CAAC;;AAED;AACA;AACA;AACA;AACAK,MAAM,CAACC,OAAO,CAACS,WAAW,GAAG,UAAUC,GAAG,EAAE;EAC3C,IAAIC,OAAO,GAAGD,GAAG,CAACC,OAAO;EACzB,IAAIC,KAAK,GAAGF,GAAG,CAACE,KAAK;EACrB,IAAI,CAACA,KAAK,EAAE;IACX,OAAOD,OAAO;EACf,CAAC,MAAM,IAAIC,KAAK,CAACjB,OAAO,CAACgB,OAAO,CAAC,GAAG,CAAC,EAAE;IACtC,OAAOA,OAAO,GAAG,IAAI,GAAGC,KAAK;EAC9B,CAAC,MAAM;IACN,OAAOA,KAAK;EACb;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}