{"ast":null,"code":"/**\r\n * @returns {string}\r\n */\nfunction getCurrentScriptSource() {\n  // `document.currentScript` is the most accurate way to find the current script,\n  // but is not supported in all browsers.\n  if (document.currentScript) {\n    return document.currentScript.getAttribute(\"src\");\n  }\n\n  // Fallback to getting all scripts running in the document.\n  var scriptElements = document.scripts || [];\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\n    return element.getAttribute(\"src\");\n  });\n  if (scriptElementsWithSrc.length > 0) {\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\n    return currentScript.getAttribute(\"src\");\n  }\n\n  // Fail as there was no script to use.\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\n}\nexport default getCurrentScriptSource;","map":{"version":3,"names":["getCurrentScriptSource","document","currentScript","getAttribute","scriptElements","scripts","scriptElementsWithSrc","Array","prototype","filter","call","element","length","Error"],"sources":["C:/Users/leesuhyeon/Desktop/2024 1학기 과제/캡디/캡디2/front/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js"],"sourcesContent":["/**\r\n * @returns {string}\r\n */\r\nfunction getCurrentScriptSource() {\r\n  // `document.currentScript` is the most accurate way to find the current script,\r\n  // but is not supported in all browsers.\r\n  if (document.currentScript) {\r\n    return document.currentScript.getAttribute(\"src\");\r\n  }\r\n\r\n  // Fallback to getting all scripts running in the document.\r\n  var scriptElements = document.scripts || [];\r\n  var scriptElementsWithSrc = Array.prototype.filter.call(scriptElements, function (element) {\r\n    return element.getAttribute(\"src\");\r\n  });\r\n  if (scriptElementsWithSrc.length > 0) {\r\n    var currentScript = scriptElementsWithSrc[scriptElementsWithSrc.length - 1];\r\n    return currentScript.getAttribute(\"src\");\r\n  }\r\n\r\n  // Fail as there was no script to use.\r\n  throw new Error(\"[webpack-dev-server] Failed to get current script source.\");\r\n}\r\nexport default getCurrentScriptSource;"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,sBAAsBA,CAAA,EAAG;EAChC;EACA;EACA,IAAIC,QAAQ,CAACC,aAAa,EAAE;IAC1B,OAAOD,QAAQ,CAACC,aAAa,CAACC,YAAY,CAAC,KAAK,CAAC;EACnD;;EAEA;EACA,IAAIC,cAAc,GAAGH,QAAQ,CAACI,OAAO,IAAI,EAAE;EAC3C,IAAIC,qBAAqB,GAAGC,KAAK,CAACC,SAAS,CAACC,MAAM,CAACC,IAAI,CAACN,cAAc,EAAE,UAAUO,OAAO,EAAE;IACzF,OAAOA,OAAO,CAACR,YAAY,CAAC,KAAK,CAAC;EACpC,CAAC,CAAC;EACF,IAAIG,qBAAqB,CAACM,MAAM,GAAG,CAAC,EAAE;IACpC,IAAIV,aAAa,GAAGI,qBAAqB,CAACA,qBAAqB,CAACM,MAAM,GAAG,CAAC,CAAC;IAC3E,OAAOV,aAAa,CAACC,YAAY,CAAC,KAAK,CAAC;EAC1C;;EAEA;EACA,MAAM,IAAIU,KAAK,CAAC,2DAA2D,CAAC;AAC9E;AACA,eAAeb,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}